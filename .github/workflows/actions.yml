name: Nuclei-Templates-Collecter

on:
  schedule:
    - cron: '0 */6 * * *'
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}   # dùng cho GitHub API (rate limit cao & lấy default_branch)

    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23.0'

    - name: Install tools & Nuclei / Nucleihub
      run: |
        sudo apt-get update
        sudo apt-get install -y tar unzip curl jq
        # nucleihub
        wget -q https://github.com/rix4uni/nucleihub/releases/download/v0.0.3/nucleihub-linux-amd64-0.0.3.tgz
        tar -xzf nucleihub-linux-amd64-0.0.3.tgz && rm -f nucleihub-linux-amd64-0.0.3.tgz
        sudo mv nucleihub /usr/local/bin/nucleihub
        # nuclei
        mkdir -p nuclei
        wget -q -P nuclei https://github.com/projectdiscovery/nuclei/releases/download/v3.3.7/nuclei_3.3.7_linux_amd64.zip
        unzip -q nuclei/nuclei_3.3.7_linux_amd64.zip -d nuclei
        sudo mv nuclei/nuclei /usr/local/bin/nuclei
        rm -rf nuclei

    - name: Build repo lists (Nucleihub + Emad)
      run: |
        set -euo pipefail
        mkdir -p lists

        # (A) Lấy list repo từ nucleihub (chỉ những repo "Updated today")
        curl -s "https://raw.githubusercontent.com/rix4uni/nucleihub/refs/heads/main/reponames.txt" \
        | nucleihub updatecheck \
        | grep "^Updated today:" \
        | sed 's/^Updated today: //' \
        > lists/nucleihub-updated.txt

        # (B) Lấy README.txt của Emad và extract các link repo thuần (bỏ gist/link con)
        curl -s "https://raw.githubusercontent.com/emadshanab/Nuclei-Templates-Collection/refs/heads/main/README.txt" \
        | grep -oE 'https://github.com/[^ )]+' \
        | sed 's/[),]$//' \
        | awk -F'/' 'NF>=5{next} {print}' \
        | sed -E 's#\.git$##; s#/$##' \
        | sort -u \
        > lists/emad-base.txt

        # (C) Gộp thô (tránh trùng)
        cat lists/nucleihub-updated.txt lists/emad-base.txt 2>/dev/null | sort -u > lists/combined-raw.txt

    - name: Normalize to ZIP archives (detect default branch, fallback main/master)
      run: |
        set -euo pipefail
        : > lists/archives.txt

        normalize() {
          local url="$1"
          # nếu đã là .zip thì giữ nguyên
          if [[ "$url" =~ \.zip$ ]]; then
            echo "$url"
            return
          fi

          # chỉ xử lý dạng https://github.com/<owner>/<repo>
          if [[ "$url" =~ ^https://github.com/([^/]+)/([^/]+)$ ]]; then
            owner="${BASH_REMATCH[1]}"
            repo="${BASH_REMATCH[2]}"
            repo="${repo%.git}"

            branch="main"
            # nếu có GH_TOKEN, hỏi GitHub API lấy default_branch để giảm lỗi
            if [[ -n "${GH_TOKEN:-}" ]]; then
              api="https://api.github.com/repos/${owner}/${repo}"
              branch=$(curl -fsSL -H "Authorization: Bearer ${GH_TOKEN}" "$api" | jq -r '.default_branch // "main"' || echo main)
            fi

            # tạo URL codeload và kiểm tra nhanh; nếu fail thì thử main/master
            for b in "$branch" main master; do
              zipurl="https://codeload.github.com/${owner}/${repo}/zip/refs/heads/${b}"
              if curl -sILf -o /dev/null "$zipurl"; then
                echo "$zipurl"
                return
              fi
            done
          fi
          # nếu không khớp (gist/link con), bỏ qua
          return 1
        }

        while IFS= read -r line; do
          out="$(normalize "$line" || true)"
          [[ -n "$out" ]] && echo "$out"
        done < lists/combined-raw.txt | sort -u > lists/archives.txt

        echo "Prepared $(wc -l < lists/archives.txt) archive URLs."

    - name: Download with nucleihub
      run: |
        set -euo pipefail
        mkdir -p nucleihub-downloaded-repos
        # Lưu ý: giờ dùng toàn link ZIP hợp lệ -> không còn "Unsupported URL format"
        cat lists/archives.txt \
        | nucleihub download --output-directory nucleihub-downloaded-repos

    - name: De-duplicate & collect YAMLs
      run: |
        set -euo pipefail
        nucleihub duplicate \
          --input-directory nucleihub-downloaded-repos \
          --output-directory nucleihub-templates \
          --large-content
        rm -rf nucleihub-downloaded-repos

    - name: (Optional) Validate templates with nuclei (bật -ni để bỏ interactsh)
      run: |
        # validate cú pháp để tránh template lỗi (không bắt buộc)
        nuclei -validate -t nucleihub-templates -ni || true

    - name: Commit and push changes if any
      run: |
        git config --global user.name 'GitHub Actions'
        git config --global user.email 'actions@users.noreply.github.com'
        git add .
        if ! git diff --cached --exit-code; then
          IST_DATE=$(TZ='Asia/Kolkata' date +'%a %b %d %H:%M:%S IST %Y')
          git commit -m "Updated templates: $IST_DATE"
          git push
        else
          echo "No changes to commit"
        fi
